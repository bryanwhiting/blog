---
title: "Goals"
comments: false
listing:
  type: table
  contents: goals
  fields: [date, title, description]
  sort: 
    - "date desc"
    - "title asc"
  sort-ui: [date, title]
  filter-ui: [date, title]
  page-size: 30
  grid-item-border: true
  feed: false
  categories: cloud
execute:
  echo: false
  warning: false
  message: false 
---

Public accountability is the greatest motivator. These goals are correlated with, but not causal to happiness. They're anti-sad, but pro-happy comes not from checking off boxes but by building meaningful relationships with God, self, family, and friends.

::: {.callout-tip collapse="true"}
## 2024 Goals: Read, hike, pray, meditate, workout, give thanks daily, study scripture daily

### Objective

- Deepen my relationship with and connection to God, self, family, and friends.
- Enjoy intellectual growth and historical understanding
- Have fun.

### KPIs 

Reading:

- 52 books. 12 fiction. 12 biographies. 12 business/self help. 4 religious. And 12 free choice (history, philosophy, career/data-ai).

Daily Habits:

- Pray
- Meditate
- Workout (strength and cardio)
- Give thanks (write a post)
- Study scriptures (write a post)

Fun:

- 52 hikes (1x/wk)
- Call a friend
- 4 weekend trips/vacations to new destinations and parks

:::


```{r}
#| label: prep-data
library(dplyr)
library(ggplot2)
library(purrr)
library(tidyr)
library(gt)


# list_fields = c('categories', 'body-zones', 'exercies')

extract_yaml_to_df <- function(file) {
  # file = "christianity/three-little-pigs-christ.md"  
  # cat("Reading file", file)
  file_content <- readLines(file)
  yaml_lines <- grep("---", file_content)
  yaml_start <- yaml_lines[1] + 1
  yaml_end <- yaml_lines[2] - 1
  # yaml content
  yaml_list <- file_content[(yaml_start):(yaml_end)]
  yaml_text = paste(yaml_list, collapse = "\n")
  yaml_data <- yaml::read_yaml(text=yaml_text)
  yaml_data
  # Anything that's a vector should be listed and collapsed
  list_fields <- names(yaml_data)[sapply(yaml_data, function(x) is.vector(x) && length(x) > 1)]
  for(field in list_fields){
    yaml_data[field] = paste(unlist(yaml_data[field]), collapse=", ")
  }
  return(tibble::as_tibble(yaml_data))
}

# add gratitude
dirs <- c('goals', 'gratitude', "christianity")
df <- tibble::tibble()
for(dir in dirs){
  files <- list.files(path = dir, pattern = "*.md", full.names = TRUE)
  for(file in files){
    # print(file)
    # convert to df
    df_new <- extract_yaml_to_df(file) 
    df_new$folder = dir
    df <- bind_rows(df, df_new)
  }
}


df$date <- lubridate::parse_date_time(df$date, orders = c("ymd", "ymd HMS", "ymd HM", "ymdHMS", "ymdHM")) 
df$date <- as.Date(df$date)

# add missing columsn
for(col in c('run-dist', 'hike-dist')){
  if(!(col %in% colnames(df))){
    df[[col]] <- 0
  }
}
# fill in missing defaults, characters are set to 'x' by default in _day journal
df <- df %>%
  mutate(across(where(is.character), ~ifelse(. == 'x', NA, .)))


# Create "cardio" and "strength" flags
df <- df %>% 
  mutate(
    post_cfm_study = stringr::str_detect(categories, 'come follow me'),
    post_gratitude = folder == 'gratitude',
    pelo = ifelse(`pelo-time` > 0, 1, 0),
    cardio = ifelse(`pelo-time` > 0 | `run-dist` > 0 | `hike-dist` > 0, 1, 0),
    strength = ifelse(length(exercises) >=1, 1, 0)
  ) %>%
  filter(title != "test")

# df2 = daily df
df2 <- df %>%
  select(
    date, pray, meditate, cardio, strength, post_cfm_study, post_gratitude
  ) %>% 
  mutate(across(-date, as.numeric)) %>%
  mutate(across(-date, ~replace_na(., 0))) %>%
  group_by(date) %>%
  summarize_all(max)
```

```{r}
#| label: fig-goals
#| fig-height: 2
#| fig-width: 7
#| fig-align: center
#| fig-cap: "Goals"
df3 <- df2 %>% 
  rowwise() %>%
  mutate(total_goals = sum(pray, meditate, strength, cardio, post_cfm_study, post_gratitude)) %>%
  ungroup() %>%
  select(date, total_goals) %>%
  mutate(week_of_year = lubridate::week(date),
         day_of_week = lubridate::wday(date, label = TRUE)) 

ggplot(df3, aes(x = week_of_year, y = day_of_week, fill = total_goals)) +
  geom_tile(color = "white", width = 0.9, height = 0.9) +  # Adjust these values as needed to shrink the tiles
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "Week of the Year", y = "Day of Week", fill='Count') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
```

```{r}
#| label: fig-goals-table
#| fig-cap: Recent streak
#| fig-align: center
df2_recent <- df2 %>% 
  filter(date >= max(date) - 13) %>%
  arrange(desc(date)) %>%
  select(
    `Day` = date,
    `🛐` = pray,
    `🧘🏼‍♂️` = meditate,
    `📖` = post_cfm_study,
    `🙏🏻` = post_gratitude,
    `🚴🏻‍♂️` = cardio,
    `🏋🏼‍♂️` = strength
  ) 

# Assuming your data frame is named 'data'
# First, convert the 'Day' column to the desired format
df2_recent$Day <- format(as.Date(df2_recent$Day), "%a %b %d")




df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  tab_style(
    style = cell_text(color = "darkgreen"),
    locations = cells_body(
      columns = 2:7,
      rows = df2_recent[[2:7]] > 1
    )
  ) %>%
  tab_header(
    title = "Daily Habits"
  ) |>
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    Day ~ px(100),
    everything() ~ px(50),
  ) 
```

```{r}
#| label: fig-peloton
#| fig-cap: Peloton Records
#| fig-align: center
df %>% 
  filter(pelo == 1) %>%
  filter(date >= Sys.Date() - 60) %>%
  group_by(`pelo-time`) %>%
  filter(`pelo-kj` == max(`pelo-kj`)) %>%
  select(`pelo-time`, `pelo-kj`, `pelo-avg`, date, `workout-notes`) %>%
  ungroup() %>%
  mutate(`90%` = paste0("", .9 * `pelo-kj`, "KJ\n(", .9 * `pelo-avg`, "avg)")) %>%
  mutate(`80%` = paste0("", .8 * `pelo-kj`, "KJ (", .8 * `pelo-avg`, "avg)")) %>%
  mutate(`70%` = paste0("", .7 * `pelo-kj`, "KJ (", .7 * `pelo-avg`, "avg)")) %>%
  gt() %>%
  cols_width(
    `90%` ~ px(70),
    `80%` ~ px(70),
    `70%` ~ px(70),
    # everything() ~ px(150),
  ) %>%
  cols_label(
    `pelo-time` = "Time",
    `pelo-kj` = "KJ",
    `pelo-avg` = "Avg W",
    `workout-notes` = "Notes",
    `date` = "Day"
  ) %>%
  tab_header(title = "Bike Records")

```

***