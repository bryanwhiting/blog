    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_options(column_labels.padding = px(15),
              column              column     l = px(7)) %              column    , everything()) %>%
  opt_css(
  css = "
    #mygt .gt_col_heading {
                                   nsform: rotate(-90deg);
      font-weight: bold;
    }
    "
)
library(gt)
df2_recent <- df2 %>% 
  filter(date >= max(date) - 13) %>%
  arrange(desc(date)) %>%
  select(
    `Day` = date,
    `Pray`=pray,
    `Meditate` = meditate,
    `Study Post` = post_cfm_study,
    `Gratitude Post` = post_gratitude,
    `Cardio` = cardio,
    `Strength` = strength
  ) 
# Assuming your data frame is named 'data'
# First, convert the 'Day' column to the desired format
df2_recent$Day <- format(as.Date(df2_recent$Day), "%a %b %d")
df2_recent %>%
  gt(rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  )
df2_recent %>%
  gt(rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_options(column_labels.padding = px(15),
              column_labels.padding.horizontal = px(7)) %>%
  cols_align("center", everything())
df2_recent %>%
  gt(rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_options(column_labels.padding = px(15),
              column_labels.padding.horizontal = px(7)) %>%
  cols_align("center", everything()) %>%
  opt_css(
    css = "
      #mygt .gt_col_heading {
        text-align: center;
        transform: rotate(-90deg);
        font-weight: bold;
      }
      "
)
df2_recent %>%
  gt(rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_options(column.labels.rotate = 90) 
df2_recent %>%
  gt(rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_options(column_labels.rotate = 90) 
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
    tab_options(column_labels.padding = px(15),
              column_labels.padding.horizontal = px(7)) %>%
  cols_align("center", everything()) %>%
  opt_css(
  css = "
    #mygt .gt_col_heading {
      text-align: center;
      transform: rotate(-90deg);
      font-weight: bold;
    }
    "
)
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
    # tab_options(column_labels.padding = px(15),
    #           column_labels.padding.horizontal = px(7)) %>%
  cols_align("left", everything()) %>%
  opt_css(
  css = "
    #mygt .gt_col_heading {
      text-align: center;
      transform: rotate(-90deg);
      font-weight: bold;
    }
    "
)
df2_recent
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
    # tab_options(column_labels.padding = px(15),
    #           column_labels.padding.horizontal = px(7)) %>%
  cols_align("left", everything()) %>%
  opt_css(
  css = "
    #mygt .gt_col_heading {
      text-align: left;
      transform: rotate(-90deg);
      font-weight: bold;
    }
    "
)
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
    # tab_options(column_labels.padding = px(15),
    #           column_labels.padding.horizontal = px(7)) %>%
  opt_css(
  css = "
    #mygt .gt_col_heading {
      text-align: left;
      transform: rotate(-90deg);
      font-weight: bold;
    }
    "
)
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_style(
    style = cell_borders(sides = "right", color = "gray", weight = px(1)),
    locations = cells_body(columns = everything())
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    num ~ px(150),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    everything() ~ px(150),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center", scope = "body") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    everything() ~ px(150),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    everything() ~ px(150),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    everything() ~ px(20),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    everything() ~ px(50),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    date ~ px(100),
    everything() ~ px(50),
  )
df2_recent %>%
  gt(id='mygt', rowname_col = "Day") %>%
  data_color(
    columns = c(2:7),  # replace with the actual column indices or names
    colors = scales::col_bin(
      bins = c(-Inf, 0.5, Inf),  # defining bins to separate 0 and 1
      palette = c("white", "darkgreen"),  # white for 0, dark green for 1
      domain = NULL
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(color = "transparent")
    ),
    locations = cells_body(
      columns = c(2:7)  # replace with the actual column indices or names
    )
  ) %>%
  cols_align(align = "center") %>%
  tab_style(
    style = cell_borders(sides = "right", color = "white", weight = px(1)),
    locations = cells_body(columns = everything())
  ) %>%
  cols_width(
    Day ~ px(100),
    everything() ~ px(50),
  )
