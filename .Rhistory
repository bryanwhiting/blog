df_dates <- bind_rows(data.frame(date = seq(as.Date("2024-01-01"), as.Date("2024-12-01"), by = "days"))) %>%
  mutate(day_of_month = lubridate::day(date)) %>%
  mutate(month_type = ifelse(lubridate::month(date) %% 2 == 0, 1, 0))
df_dates
df3
df3 <- df2 %>% 
  rowwise() %>%
  mutate(total_goals = sum(pray, meditate, strength, cardio, post_cfm_study, post_gratitude)) %>%
  ungroup() %>%
  select(date, total_goals) 
df_dates <- bind_rows(data.frame(date = seq(as.Date("2024-01-01"), as.Date("2024-12-01"), by = "days"))) %>%
  mutate(day_of_month = lubridate::day(date)) %>%
  mutate(month_type = ifelse(lubridate::month(date) %% 2 == 0, 1, 0))
df4 <- left_join(df3, df_dates, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) 
df4
ggplot(df4, aes(x = week_start_date, y = day_of_week, fill = total_goals)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = as.factor(month_type)), alpha = 0.2) +
  # add titles for goals
  geom_tile(color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df3$day_of_week))) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
df4 <- left_join(df3, df_dates, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) 
df4
ggplot(df4, aes(x = week_start_date, y = day_of_week, fill = total_goals)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = as.factor(month_type)), alpha = 0.2) +
  # add titles for goals
  geom_tile(color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df3$day_of_week))) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
df
df4
df4 <- left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) 
df4
left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) %>%
  replace_na(0)
df4 <- left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) %>%
  mutate(total_goals = replace_na(total_goals, 0)))
df4 <- left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) %>%
  mutate(total_goals = replace_na(total_goals, 0))
df4
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = as.factor(month_type)), alpha = 0.2) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df3$day_of_week))) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
df4
ggplot(df4, aes(x = week_start_date, y = day_of_week))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = as.factor(month_type)), alpha = 0.2)
rlang::last_trace()
renv::install.packages('crayon')
renv::install('crayon')
renv::snapshot()
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = as.factor(month_type)), alpha = 0.2)
rlang::last_trace()
df4$month_type_continuous <- ifelse(df4$month_type == 1, df4$month_type + 0.5, df4$month_type)
df4
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = month_type), alpha = 0.2)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, fill = month_type_continuous), alpha = 0.2)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  # Add rectangles for the background shading
  geom_rect(data = df4 %>% group_by(week_start_date) %>% 
              summarize(month_type = first(month_type)), # Ensure month_type is in the data
            aes(xmin = week_start_date, 
                xmax = week_start_date + 7, 
                ymin = -Inf, 
                ymax = Inf, 
                fill = factor(month_type)), # Convert month_type to factor
            alpha = 0.2) +
  scale_fill_manual(values = c("0" = "white", "1" = "gray")) + # Set colors for month_type
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  # Add rectangles for the background shading
  geom_rect(data = df4 %>% group_by(week_start_date) %>% 
              summarize(month_type = first(month_type)), # Ensure month_type is in the data
            aes(xmin = week_start_date, 
                xmax = week_start_date + 7, 
                ymin = -Inf, 
                ymax = Inf, 
                fill = factor(month_type)), # Convert month_type to factor
            alpha = 0.2) +
  scale_fill_manual(values = c("0" = "white", "1" = "gray")) 
df4
df4 <- left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) %>%
  mutate(total_goals = replace_na(total_goals, 0))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  # Add rectangles for the background shading
  geom_rect(data = df4 %>% group_by(week_start_date) %>% 
              summarize(month_type = first(month_type)), # Ensure month_type is in the data
            aes(xmin = week_start_date, 
                xmax = week_start_date + 7, 
                ymin = -Inf, 
                ymax = Inf, 
                fill = factor(month_type)), # Convert month_type to factor
            alpha = 0.2) +
  scale_fill_manual(values = c("0" = "white", "1" = "gray")) 
ggplot(df4, aes(x = week_start_date, y = day_of_week)) 
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  # Add rectangles for the background shading
  geom_rect(data = df4 %>% group_by(week_start_date) %>% 
              summarize(month_type = first(month_type)), # Ensure month_type is in the data
            aes(xmin = week_start_date, 
                xmax = week_start_date + 7, 
                ymin = -Inf, 
                ymax = Inf, 
                fill = factor(month_type)), # Convert month_type to factor
            alpha = 0.2)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf, color=month_type), alpha = 0.2) 
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
 # Add rectangles for the background shading
  geom_rect(aes(xmin = week_start_date, xmax = week_start_date + 7, ymin = -Inf, ymax = Inf), alpha = 0.2) 
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill=month_type))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill=as.factor(month_type)))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill=as.factor(month_type))) + 
  scale_fill_manual(values = c("lightblue", "lightgreen"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill=as.factor(month_type))) + 
  scale_fill_manual(values = c("white", "lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  geom_tile(aes(fill=as.factor(month_type))) + 
  scale_fill_manual(values = c("white", "lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) 
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6))
ggplot() +
  theme_minimal() +
  # background shading
  geom_tile(df4, aes(x = week_start_date, y = day_of_week, fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(df4, aes(x = week_start_date, y = day_of_week, fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot() +
  theme_minimal() +
  # background shading
  geom_tile(df4, aes(x = week_start_date, y = day_of_week, fill=as.factor(month_type)), show.legend = FALSE)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("0" = "white", "1"="lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("0" = "white", "1"="lightgray")) +
  # add titles for goals
  geom_tile(data = df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) +
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_rect(aes(fill=as.factor(month_type)), show.legend = FALSE) 
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("0" = "white", "1"="lightgray")) +
  # add titles for goals
  geom_tile(data = df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("0" = "white", "1"="lightgray")) +
  # add titles for goals
  geom_tile(data = df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  scale_color_manual(values = c("0" = "white", "1"="lightgray")) +
  # add titles for goals
  geom_tile(data = df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  scale_color_manual(values = c("0" = "white", "1"="lightgray")) +
  # add titles for goals
  geom_tile(data = df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) +
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  scale_color_manual(values = c("0" = "white", "1"="lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  scale_color_manual(values = c("white", "lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray"))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile( aes(color = total_goals))
library(grid)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df3$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = as.factor(month_type)), show.legend = FALSE) +
  scale_fill_manual(values = c("0" = "white", "1" = "lightgray"))
p1 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = as.factor(month_type)), show.legend = FALSE) +
  scale_fill_manual(values = c("0" = "white", "1" = "lightgray"))
p1 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = as.factor(month_type)), show.legend = FALSE) +
  scale_fill_manual(values = c("0" = "white", "1" = "lightgray")) + 
  theme_minimal()
p2 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) +
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  theme_void()
p1 + annotation_custom(ggplotGrob(p2), xmin = min(df4$week_start_date), xmax = max(df4$week_start_date), ymin = min(df4$day_of_week), ymax = max(df4$day_of_week))
p2
p1 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = as.factor(month_type)), show.legend = FALSE) +
  scale_fill_manual(values = c("0" = "white", "1" = "lightgray")) + 
  theme_minimal()
p2 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) +
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  theme_minimal()
p2
p1 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = as.factor(month_type)), show.legend = FALSE) +
  scale_fill_manual(values = c("0" = "white", "1" = "lightgray")) + 
  theme_minimal()
p2 <- ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  geom_tile(aes(fill = total_goals), color = "white", width = 5, height = 0.9) +
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  theme_minimal()
p1 + annotation_custom(ggplotGrob(p2), xmin = min(df4$week_start_date), xmax = max(df4$week_start_date), ymin = min(df4$day_of_week), ymax = max(df4$day_of_week))
library(gtable)
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
g1
library(gtable)
1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Make sure the sizes match
g2$widths <- g1$widths
g2$heights <- g1$heights
# Overlay the plots
g <- gtable::rbind(g1, g2, size = "first")
g <- gtable::gtable_add_grob(g, g2$grobs, t = 1, l = 1, z = Inf)
# Draw the combined plot
grid.newpage()
grid.draw(g)
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
g2$widths <- g1$widths
g2$heights <- g1$heights
g <- gtable::rbind(g1, g2, size = "first")
g <- rbind(g1, g2, size = "first")
g <- gtable::gtable_add_grob(g, g2$grobs, t = 1, l = 1, z = Inf)
grid.newpage()
grid.draw(g)
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
df4
df_dates <- bind_rows(data.frame(date = seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "days"))) %>%
  mutate(day_of_month = lubridate::day(date)) %>%
  mutate(month_type = ifelse(lubridate::month(date) %% 2 == 0, 1, 0))
df4 <- left_join(df_dates, df3, by = 'date') %>%
  mutate(#week_of_year = lubridate::week(date),
         week_start_date = lubridate::floor_date(date, "week"),
         day_of_week = lubridate::wday(date, label = TRUE)) %>%
  mutate(total_goals = replace_na(total_goals, 0))
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading
  # geom_tile(aes(fill=as.factor(month_type)), show.legend = FALSE) + 
  # scale_fill_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading - nearly works.
  geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  scale_color_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
ggplot(df4, aes(x = week_start_date, y = day_of_week)) +
  theme_minimal() +
  # background shading - nearly works.
  # geom_tile(aes(color=as.factor(month_type)), show.legend = FALSE) + 
  geom_tile(aes(color=as.factor(month_type))) + 
  # scale_color_manual(values = c("white", "lightgray")) +
  # add titles for goals
  # geom_tile( aes(color = total_goals), color = "white", width = 5, height = 0.9) +
  geom_tile(data=df4, aes(fill = total_goals), color = "white", width = 5, height = 0.9) + 
  scale_fill_gradient(low = "white", high = "darkgreen", limits = c(1, 6)) +
  labs(x = "", y = "", fill='Habits\nAccomplished', title = "Daily Success") +
  scale_x_date(limits = as.Date(c("2023-12-25", "2024-12-31")), labels = scales::date_format("%b")) +
  scale_y_discrete(limits = rev(levels(df4$day_of_week))) +
  theme(axis.text.x = element_text(angle = 0, hjust = 0),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank())
df4
