<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Bryan Whiting</title>
<link>https://www.bryanwhiting.com/tech.html</link>
<atom:link href="https://www.bryanwhiting.com/tech.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.515</generator>
<lastBuildDate>Thu, 04 Apr 2024 21:06:11 GMT</lastBuildDate>
<item>
  <title>LLMs need to call Functions</title>
  <link>https://www.bryanwhiting.com/news/llms-need-to-call-functions.html</link>
  <description><![CDATA[ 





<p><a href="https://www.linkedin.com/posts/andrewyng_microsoft-absorbs-inflection-nvidias-new-activity-7181717345814421504-E1hR?utm_source=share&amp;utm_medium=member_ios">Andrew Ng on LinkedIn: Microsoft Absorbs Inflection, Nvidia’s New GPUs, Managing AI Bio Risk, and… | 38 comments</a></p>
<ul>
<li>LLms guess what functions to call, such as running a calculation in Python or a function to do a web search.</li>
<li>Efficient Tool Use with Chain-of-Abstraction Reasoning, Gao et al.&nbsp;(2024)</li>
</ul>
<p><a href="https://www.deeplearning.ai/the-batch/issue-243/">Microsoft Absorbs Inflection, Nvidia’s New GPUs, Managing AI Bio Risk, and more</a></p>
<p><a href="https://www.deeplearning.ai/the-batch/how-agents-can-improve-llm-performance/?utm_campaign=The%20Batch&amp;utm_source=hs_email&amp;utm_medium=email">Four AI Agent Strategies That Improve GPT-4 and GPT-3.5 Performance</a></p>
<ul>
<li>AI agenic workflows can help AI achieve 95% code quality vs zero shot.</li>
</ul>
<p><a href="https://www.deeplearning.ai/the-batch/agentic-design-patterns-part-2-reflection/?ref=dl-staging-website.ghost.io">Agentic Design Patterns Part 2: Reflection</a></p>
<ul>
<li>Here’s code intended for task X: [previously generated code] Check the code carefully for correctness, style, and efficiency, and give constructive criticism for how to improve it.</li>
<li>Next, we can prompt the LLM with context including (i) the previously generated code and the constructive feedback and (ii) ask it to use the feedback to rewrite the code</li>
</ul>
<p><a href="https://www.deeplearning.ai/the-batch/agentic-design-patterns-part-3-tool-use/?ref=dl-staging-website.ghost.io">Agentic Design Patterns Part 3: Tool Use</a></p>
<p><a href="https://mad.firstmarkcap.com/">FirstMark | 2024 MAD (ML/AI/Data) Landscape</a> - there are too many tools for any one person or organization to know what to do with. It’s a full time job just to understand what’s out there.</p>
<p>https://www.linkedin.com/posts/luke-b_data-nerds-what-technology-should-you-learn-activity-7181698703722729472-N03S?utm_source=share&amp;utm_medium=member_ios</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-mad-first-mark-cap.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Data landscape</figcaption>
</figure>
</div>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>news</category>
  <category>ai</category>
  <category>ai tools</category>
  <guid>https://www.bryanwhiting.com/news/llms-need-to-call-functions.html</guid>
  <pubDate>Thu, 04 Apr 2024 21:06:11 GMT</pubDate>
</item>
<item>
  <title>Why you should log with Aimstack</title>
  <link>https://www.bryanwhiting.com/tech/why-you-should-log-with-aimstack.html</link>
  <description><![CDATA[ 





<p>I’ve long idolized <a href="https://aimstack.io/">Home | AimStack</a>. It’s a tool that allows you to track metrics and hyperparameters and a whole bunch of stuff. It lets you compare across experiments.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-aimstack.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Aim landing lage</figcaption>
</figure>
</div>
<p>I first built my own version of this in <code>RShiny</code> back in 2017 so I could compare AUC across experiments.</p>
<p>I was using <code>h2o.ai</code> at the time which had this great flow for monitoring an individual experiment but made it impossible to compare across experiments.</p>
<p>Then my company Capital One built <code>rubicon</code>: <a href="https://github.com/capitalone/rubicon-ml">GitHub - capitalone/rubicon-ml: Capture all information throughout your model’s development in a reproducible way and tie results directly to the model code!</a>. This was cool and they open sourced it. It tracks parameters.</p>
<p>But it pales in comparison to <code>aim</code>.</p>
<p>Aim can do all these things:</p>
<ul>
<li>Track hyperparameters</li>
<li>Track learning curves (like a metric over time such as when building DL models and you’re watching how the error decreases with each epoch)</li>
<li>Track any <code>plotly</code> plot, which means you can put any EDA charts nicely organized in one place</li>
<li>it captures all your <code>logging.info</code> calls so you don’t need to use a remote logging thing like <code>cloud watch</code> to monitor long runs</li>
<li>It has its own loggers if you want to differentiate</li>
<li>It lets you take notes on an experiment</li>
<li>If lets you compare across experiments</li>
<li>It lets you use locally or remotely as a remote API</li>
<li>It tracks images, etc.</li>
<li>it connects with ML packages like <code>xgbost</code> to auto log.</li>
<li>It can even convert <code>MLFlow</code> data.</li>
</ul>
<p>It’s incredible. Use it. It’s free.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>logging</category>
  <category>machine learning</category>
  <category>data pipeline</category>
  <category>ml pipeline</category>
  <category>data science</category>
  <category>monitoring</category>
  <category>ml-tools</category>
  <guid>https://www.bryanwhiting.com/tech/why-you-should-log-with-aimstack.html</guid>
  <pubDate>Tue, 02 Apr 2024 22:15:37 GMT</pubDate>
</item>
<item>
  <title>Configurations for ML Pipelines</title>
  <link>https://www.bryanwhiting.com/tech/configurations-for-ml-pipelines.html</link>
  <description><![CDATA[ 





<p>Configuring an ML pipeline means you have 15 different things that could change at any time and you create a way to easily change those 15 things. Those 15 things could be file paths, data filtering steps, models you want to use, etc.</p>
<p>Any researcher constantly asks themselves: but what if I switch X?</p>
<p>And so the researcher starts to configure a pipeline.</p>
<section id="config-methods-ive-used" class="level1">
<h1>Config Methods I’ve Used</h1>
<p>First time I built a config it was in VBA. I had a text file I loaded in that could be overwritten based on setting someone chose.</p>
<p>Second time I config’d something was in Python. I used <code>ConfigParser</code> per my Manager David Mantilla’s suggestion. It was pretty good. But unwieldy. Don’t use fhis.</p>
<p>Third thing I saw was using a Python constants.py file. Just import Python variables from another module. This is nice because you can import model objects or such. Dicts. Whatever. Seems great. But it’s Python code. Config files shouldn’t be code. They should be configs. Every great software follows this, like <code>k8s</code> helm charts or whatever. Google loves using <code>Protobufs</code>. Configs shouldn’t be code, because if they’re code they’re dangerous. You start doing crazy things with them.</p>
<p>Fourth thing I did was to use YAML which is very clean. Lots of people like YAML. This gets unwieldy if you need 100 configs for different customers, for example. Can you imagine managing 100 yaml files? What if you need to update one param? Then you need to update 100 files. Rough.</p>
<p>I also used Pydantic to read in the YAML file and validate types. Gotta validate types. What’s an int vs a string? Well, this mean that we needed to design the pipeline to rely on some <code>config</code> class. We had to pass this config object around everywhere. Not super idea but gets the job done.</p>
<p>Fifth thing was to use one default YAML. This solved the issue of redundancy across all the 100 YAML files. (If you only have one model, you probably need only 1 YAML file so this may not be your problem.) But this still kinda stinks. It’s in a file.</p>
<p>Sixth thing was some eng’s on my team saw a better way and build a CRUD database. This made it so we didn’t have to do a code change to update a config. That means that people outside the team could edit a config. Awesome. But we still have 100 web pages that could change. Kinda sux. And we still had a default setting - essential.</p>
<p>Problem with 100 YAML or 100 web pages is that if you want to change things or run experiments, you need to literally clone the config file. Now you have 15 versions of the same config file with slight modifications and you can’t remember what’s going on. So you delete them all eventually and just pick one.</p>
</section>
<section id="hydra" class="level1 page-columns page-full">
<h1>Hydra?</h1>
<p>I’m writing this because I just learned about <code>hydra</code> . Remember: I use this site for note taking. Here’s what I just learned.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-hydra-configs.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Hydra!</figcaption>
</figure>
</div>
<p><a href="https://hydra.cc/">Hydra | Hydra</a></p>
<ul>
<li>Hydra is Python open source maintained by Facebook</li>
<li>If built to configure pipelines, in particular ML pipelines but could be used for anything.</li>
<li>It uses <code>dataclasses</code> and <code>yaml</code> files, so I’m thinking I was smart for what I did with my fourth option.</li>
<li>But it quickly allows you to override config files from the command line or from editing the yaml file directly.</li>
</ul>
<p>This demo is slick:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/tEsPyYnzt8s?si=2T58Ix4ZAo-N75y0" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="why-i-like-hydras-design" class="level1">
<h1>Why I like Hydra’s design</h1>
<ul>
<li>This seems really nice because it avoids the headache of changing code.</li>
<li>Also, you can create a simple bash loop to execute 5 different experiments - while retaining only one config file</li>
<li>Also, I used to think that having a system of record is pretty important: I need to save the configs that were used for this run. That tells me how the pipeline or experiment was configured. I still think that’s true: but I believe that should be done via logging instead of managing 15 config files.</li>
<li>My new belief is that experiments should be ephemeral to keep the code clean. Have one prod <code>yaml</code> file and then everything else is ephemeral. Log everything: log the created yaml file with all defaults filled inso you can recreate it if necessary.</li>
</ul>
</section>
<section id="my-ideal-world" class="level1">
<h1>My Ideal World</h1>
<p>Hydra doesn’t solve the “you shouldn’t have to do a git push to update prod”. If everything is a <code>yaml</code> file then to update prod you need to do a code change.</p>
<p>Google doesn’t seem to mind using code changes because everything is a protobuff. Code changes are nice because they’re reviewed.</p>
<p>But code changes are slow. And non-coders can do them.</p>
<p>So I believe one prod config should live in a UI with a database backend. But then that should be serialized to <code>yaml</code> and loaded via something like hydra.</p>
<p>I also believe experiments should be launched programmatically. Meaning I should be able to kick off 10 experiments training 10 models using a bash script. I can then log this experiment using <a href="../tech/why-you-should-log-with-aimstack.html">Why you should log with Aimstack</a> and I can log the full config there.</p>
<p>Also, I’d throw <code>hydra</code> in with <code>metaflow</code> .</p>
<p>How do you configure? # Appendix</p>
<ul>
<li><a href="https://medium.com/optuna/easy-hyperparameter-management-with-hydra-mlflow-and-optuna-783730700e7d">Easy Hyperparameter Management with Hydra, MLflow, and Optuna | by NT | Optuna | Medium</a></li>
</ul>


</section>

<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>configuration</category>
  <category>software engineering</category>
  <category>ml pipeline</category>
  <category>ml-tools</category>
  <guid>https://www.bryanwhiting.com/tech/configurations-for-ml-pipelines.html</guid>
  <pubDate>Tue, 02 Apr 2024 21:50:43 GMT</pubDate>
</item>
<item>
  <title>Ibis DataFrames for Python, why I hate Pandas, and what I miss about dplyr</title>
  <link>https://www.bryanwhiting.com/tech/ibis-dataframes-for-python-vs-pandas.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>I haven’t used <code>ibis</code> as of writing this. Just reviewed the docs.</p>
</blockquote>
<section id="data-manipulation-in-python" class="level1">
<h1>Data Manipulation in Python</h1>
<p>I’ve been a Python data scientist for 5-6 years. I’ve never liked pandas. Ever.</p>
<p>It’s because I started as a <code>tidyverse</code> data scientist in R. One of the things I’ve missed about using Python is <code>dplyr</code>, an R package for data manipulation. And when I started with Python it was in PySpark - it felt very similar to <code>dplyr</code>, except for the annoying JVM.</p>
<p>It’s amazing because everything is done by chaining, and it’s able to manipulate in memory or translate to a spark or SQL backend for execution. (It’s very easy to use base <code>dplyr</code> and then just run the same query in memory on a small dataframe or against <code>BigQuery</code> or something.)</p>
<p>This chaining also avoids the common readability problem with pandas wherein often you see df[x] = df[y] / df[b] on one line and that’s repeated for multiple lines if you want to create multiple new variables.</p>
<p>While <code>pandas</code> has the .pipe and .assign operators for chaining, they still require lambda functions, which get annoying. This Reddit thread explores the opinion I share: the api is inconsistent. <a href="https://www.reddit.com/r/dataengineering/comments/146rj9m/does_anyone_else_hate_pandas/">Reddit - Does anyone else hate pandas?</a>.</p>
<p><code>Polars</code> makes this much cleaner with the with_columns operator, for example, which is also very similar to <code>PySpark</code>. But <code>polars</code> is Rust backend, not Java. Game, Set, Match <code>polars</code>.</p>
<p>I’m not the only one who loves <code>dplyr</code> . There have been several Python attempts to build <code>dplyr</code> in the Python ecosystem. There were great packages like <a href="https://github.com/coursera/pandas-ply">GitHub - coursera/pandas-ply: functional data manipulation for pandas</a> (9 years since last commit), and <a href="https://github.com/dodger487/dplython">GitHub - dodger487/dplython: dplyr for python</a>, not updated in 7 years. Then there’s the <code>dfply</code> <a href="https://github.com/kieferk/dfply">package</a> that hasn’t been maintained in 5 years (see <a href="https://towardsdatascience.com/dplyr-style-data-manipulation-with-pipes-in-python-380dcb137000">tutorial</a>).</p>
<p>The <code>siuba</code> package is the latest Python <code>dplyr</code> incantation that is actively maintained: <a href="https://github.com/machow/siuba">GitHub - machow/siuba: Python library for using dplyr like syntax with pandas and SQL</a> and can also execute against a SQL backend, but it can’t execute a polars backend. # Ibis to solve my problems?</p>
<p>I just came across <code>ibis</code> however, and it seems really promising. Turns out it was <a href="https://ibis-project.org/concepts/who">created</a> in 2015 by Wes McKinney, who created the pandas pyarrow backend to solve the <a href="https://wesmckinney.com/blog/apache-arrow-pandas-internals/">“10 Things I Hate About pandas”</a>. More on the</p>
<ul>
<li><a href="https://ibis-project.org/">Ibis</a></li>
<li><a href="https://ibis-project.org/tutorials/getting_started">Ibis – getting_started</a></li>
<li><a href="https://ibis-project.org/posts/wow-analysis/">Ibis – Analysis of World of Warcraft data</a></li>
</ul>
<p><img src="https://www.bryanwhiting.com/img/screenshot-ibis-data.jpeg" class="preview-image img-fluid"></p>
<p>It looks like <code>dplyr</code> (for example it even copies some syntax like mutate() for adding new columns and select for picking columns). But, the benefit is it has <code>polars</code> and <code>pandas</code> as backends, but also offers <code>PySpark</code> (should someon need to use databricks as a backend compute engine). And it can also translate into SQL. Sure, polars can do this too: <a href="https://docs.pola.rs/user-guide/io/database/">Databases - Polars user guide</a>. But <code>ibis</code> seems more extensive.</p>
<p>This means I could have one programming language to execute either <code>polars</code>, SQL, or PySpark, rather than have both <code>polars</code> and SQL or <code>pandas</code> in my pipeline in different places. (Side note: why would I use <code>pandas</code> as a backend though when <code>polars</code> is so fast?)</p>
<p>I just discovered this over the weekend. Would love your thoughts! I’m sure there are limitations vs raw polars/pandas that are hidden from my quick overview.</p>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<p>The most annoying thing about <code>pandas</code> is the <code>.transform()</code> operator. I hate it. Just hate it. It never makes sense and I always have to look it up. This essentially just does a window operation.</p>
<p>You don’t need this until you need to do some type of aggregation within a group. Let’s assume you want to calculate the fraction of sales attributed to a city within a state. (What fraction of sales in California come from San Francisco, for example.)</p>
<p>Read the following and consider for yourself what’s simplest:</p>
<pre><code>import pandas as pd

# Sample data
data = {
    'State': ['CA', 'CA', 'CA', 'NY', 'NY', 'NY'],
    'City': ['SF', 'LA', 'SF', 'NYC', 'Buffalo', 'NYC'],
    'Sales': [100, 200, 150, 300, 100, 200]
}

df = pd.DataFrame(data)

# Calculate fraction of sales by city within state
df['Fraction'] = df.groupby('State')['Sales'].apply(lambda x: x / x.sum())

print(df)</code></pre>
<p>Polars:</p>
<pre><code>import polars as pl

df = pl.DataFrame(data)

# Calculate fraction of sales by city within state
df = df.with_column(
  pl.col('Sales') / df.groupby('State').agg(pl.sum('Sales'))['sum'])

print(df)</code></pre>
<p>Dplyr:</p>
<pre><code>library(dplyr)

# Calculate fraction of sales by city within state
df &lt;- data %&gt;%
  group_by(State) %&gt;%
  mutate(Fraction = Sales / sum(Sales))</code></pre>
<p>Ibis:</p>
<pre><code>import ibis

# Calculate fraction of sales by city within state
expr = sales.mutate(Fraction=sales['Sales'] / sales.groupby('State').Sales.sum())

result = expr.execute()
print(result)</code></pre>
<p>It may not look all that different, but pandas has this weird syntax where you group by (something) but then select a column with brackets. But sometimes you can use periods to select the column.</p>
<p>The polars and ibis implementations seem simple, but overly verbose.</p>
<p>Then there’s the <code>dplyr</code>. So elegant and simple. The <code>sum()</code> operator is summing within the group, and the <code>sales/sum(sales)</code> is very easy to read.</p>
<p>In pandas I’m left wondering what is <code>x/x.sum()</code> and why this <code>lambda</code> thing?</p>
<p>This is a very simple example, but the more you get into the weeds the more my point becomes obvious.</p>
<p>The benefits of <code>dplyr</code> come from when you want to do 10 mutates in one go. It’s so simple. In pandas that’s 10 lambda functions with a .assign operator.</p>
<p>Like, look at <code>pandas</code> trying to do this:</p>
<pre><code>import pandas as pd

# Sample data
data = {
    'A': list(range(1, 11)),
    'B': list(range(11, 21)),
    'C': list(range(21, 31))
}

df = pd.DataFrame(data)

# Using assign to create 10 new columns
df = df.assign(
    # New columns with various transformations
    A_Squared=lambda x: x['A']**2,
    B_Squared=lambda x: x['B']**2,
    C_Squared=lambda x: x['C']**2,
    A_Cubed=lambda x: x['A']**3,
    B_Cubed=lambda x: x['B']**3,
    C_Cubed=lambda x: x['C']**3,
    A_Log=lambda x: np.log(x['A']),
    B_Log=lambda x: np.log(x['B']),
    C_Log=lambda x: np.log(x['C']),
    A_B=lambda x: x['A'] * x['B']
)

print(df)</code></pre>
<p>Now look at <code>dplyr</code>:</p>
<pre><code>library(dplyr)

# Sample data
data &lt;- data.frame(
  A = 1:10,
  B = 11:20,
  C = 21:30
)

# Using mutate to create 10 new columns
df &lt;- data %&gt;%
  mutate(
    # New columns with various transformations
    A_Squared = A^2,
    B_Squared = B^2,
    C_Squared = C^2,
    A_Cubed = A^3,
    B_Cubed = B^3,
    C_Cubed = C^3,
    A_Log = log(A),
    B_Log = log(B),
    C_Log = log(C),
    A_B = A * B
  )

print(df)</code></pre>
<p>Now let’s complicate it, where each manipulation takes in a previous column:</p>
<pre><code>import pandas as pd

# Create a DataFrame
df = pd.DataFrame({'A': [10, 20, 30, 40, 50]})

# Mutate operations
df['B'] = df['A'] ** 2
df['C'] = df['A'] + df['B'] * 2
df['D'] = df['B'] / 2
df['E'] = df['C'] - df['A']
df['F'] = df['A'] * 5
df['G'] = df['D'] - df['E']
df['H'] = df['F'] + df['G']
df['I'] = df['D'] ** 2
df['J'] = df['H'] / df['I']
df['K'] = df['I'] - df['J']

print(df)</code></pre>
<p>This is how most people write pandas. They write <code>df</code> 26 times.</p>
<p>Let’s look at pandas using the <code>assign</code> operator:</p>
<pre><code>import pandas as pd

# Create a DataFrame
df = pd.DataFrame({'A': [10, 20, 30, 40, 50]})

# Mutate operations with assign and lambda functions
df = df.assign(
    B=lambda x: x['A'] ** 2,
    C=lambda x: x['A'] + x['B'] * 2,
    D=lambda x: x['B'] / 2,
    E=lambda x: x['C'] - x['A'],
    F=lambda x: x['A'] * 5,
    G=lambda x: x['D'] - x['E'],
    H=lambda x: x['F'] + x['G'],
    I=lambda x: x['D'] ** 2,
    J=lambda x: x['H'] / x['I'],
    K=lambda x: x['I'] - x['J']
)

print(df)</code></pre>
<p>Slightly better but still an eyesore. 10 lambda statements and still 26 <code>x</code> calls.</p>
<p>And in R:</p>
<pre><code>library(dplyr)

# Create a tibble
df &lt;- tibble(A = c(10, 20, 30, 40, 50))

# Mutate operations
df &lt;- df %&gt;%
  mutate(B = A ^ 2,
         C = A + B * 2,
         D = B / 2,
         E = C - A,
         F = A * 5,
         G = D - E,
         H = F + G,
         I = D ^ 2,
         J = H / I,
         K = I - J)

print(df)</code></pre>
<p>It’s just so simple. So elegant. So beautiful. No wasted text. Very easy to read.</p>
<p>Ibis seems similar to dplyr but requires the <code>D = _.["B"]/2</code> operation. <a href="https://ibis-project.org/tutorials/cloud-data-platforms/starburst-galaxy/1_basics.html#mutating-columns">Ibis – basics - mutating columns</a></p>


</section>

<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>python</category>
  <category>data science</category>
  <category>data manipulation</category>
  <category>pandas</category>
  <category>ibis</category>
  <category>data engineering</category>
  <category>analytics</category>
  <guid>https://www.bryanwhiting.com/tech/ibis-dataframes-for-python-vs-pandas.html</guid>
  <pubDate>Sun, 31 Mar 2024 21:24:06 GMT</pubDate>
</item>
<item>
  <title>On file formats: parquet vs csv</title>
  <link>https://www.bryanwhiting.com/tech/on-file-formats-parquet-vs-csv.html</link>
  <description><![CDATA[ 





<p>Came across this article today: <a href="https://kaveland.no/friends-dont-let-friends-export-to-csv.html?utm_source=tldrnewsletter">Robin’s blog – Friends don’t let friends export to CSV</a></p>
<p>This has largely been my experience too: go with the file format that’s fast reading in and out.</p>
<p>It’s rare a data scientist with open a file on their computer rather than just <code>pd.read_*()</code> it in.</p>
<p>In my last job, we were using <code>jsonl</code> files for no other reason than it how one person liked to use command line tools to analyze it.</p>
<p>But if you’re using command line tools to inspect a data file, and not just a Python repl, you’ve already gone down the wrong direction IMO. But what if you’re on a remote server and don’t have pandas installed? Yea, that’s not something you should plan for. At that point, just scp the file to a place you can read it.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>reactions</category>
  <category>news</category>
  <category>data science</category>
  <category>data engineering</category>
  <guid>https://www.bryanwhiting.com/tech/on-file-formats-parquet-vs-csv.html</guid>
  <pubDate>Tue, 26 Mar 2024 22:39:56 GMT</pubDate>
</item>
<item>
  <title>Chronos: Time Series Foundation Model by Amazon</title>
  <link>https://www.bryanwhiting.com/tech/chronos-time-series-foundation-model-by-amazon.html</link>
  <description><![CDATA[ 





<p><a href="../tech/timegpt-and-lag-llama-two-foundation-models-for-time-series-forecasting.html">TimeGPT and Lag-Llama: Two foundation models for time series forecasting</a> are two predecessor models.</p>
<p>Amazon just came out with Chronos.</p>
<p>Discussion here:</p>
<p><a href="https://www.linkedin.com/posts/pascalbiese_chronos-learning-the-language-of-time-series-ugcPost-7176540406761820160-mTvQ?utm_source=share&amp;utm_medium=member_ios">Pascal Biese on LinkedIn: Chronos: Learning the Language of Time Series | 87 comments</a></p>
<p><img src="https://www.bryanwhiting.com/img/screenshot-chronos-time-series.jpeg" class="preview-image img-fluid"></p>
<p>Puff Piece: <a href="https://www.amazon.science/blog/adapting-language-model-architectures-for-time-series-forecasting">Chronos: Adapting language model architectures for time series forecasting - Amazon Science</a></p>
<p>GitHub: <a href="https://github.com/amazon-science/chronos-forecasting/">GitHub - amazon-science/chronos-forecasting: Chronos: Pretrained (Language) Models for Probabilistic Time Series Forecasting</a></p>
<p>Paper: <a href="https://arxiv.org/abs/2403.07815v1">[2403.07815v1] Chronos: Learning the Language of Time Series</a></p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>foundation models</category>
  <category>time series</category>
  <category>ml-tools</category>
  <category>data science</category>
  <category>machine learning</category>
  <guid>https://www.bryanwhiting.com/tech/chronos-time-series-foundation-model-by-amazon.html</guid>
  <pubDate>Tue, 26 Mar 2024 15:53:23 GMT</pubDate>
</item>
<item>
  <title>News Notes for 2024-03-18</title>
  <link>https://www.bryanwhiting.com/news/2024-03-18-news-notes.html</link>
  <description><![CDATA[ 





<p><a href="https://www.linkedin.com/posts/gisenberg_this-is-an-irs-tax-form-of-a-recent-business-activity-7175477376938602497-dinJ?utm_source=share&amp;utm_medium=member_ios">Greg Isenberg on LinkedIn: This is an IRS tax form of a recent business we started. 95% of the… | 65 comments</a> - Greg on how to bootstrap a busines. - This is an IRS tax form of a recent business we started. 95% of the businesses we start look like this:</p>
<p>We use audience to bootstrap customers.</p>
<p>When we don’t have time to build an audience, we’ll partner with a creator. Give them a cut of the business.</p>
<p>Then we’ll create a little community of the power customers. Sometimes it’s just an iMessage group or WhatsApp group.</p>
<p>We limit who can come in. This is only for the people for the most excited audience members. Those who just are dying to be in a group of other like-minded people.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>news</category>
  <guid>https://www.bryanwhiting.com/news/2024-03-18-news-notes.html</guid>
  <pubDate>Mon, 18 Mar 2024 10:57:44 GMT</pubDate>
</item>
<item>
  <title>How I Learn and How to Hack the Audio Book and Speed Reading Game</title>
  <link>https://www.bryanwhiting.com/tech/how-i-learn.html</link>
  <description><![CDATA[ 





<p>I’ve been overdosing slightly on learning lately.</p>
<p>Ever since I got off social media, I got into writing (<a href="../tech/a-knife-to-a-gun-fight.html">A Knife to a Gun Fight: Why I’m off Social Media</a>), and listening to audio books.</p>
<p>Podcasts are fine, but they’re about as quality as top-of-mind thinking. Books are usually far more instructive because each sentence is reviewed at least a few times if not a hundred times during the editing process.</p>
<p>I noticed that once I started binging books instead of posts, my happiness and satisfaction increased.</p>
<p>Here’s a strategy I’m using for learning.</p>
<ol type="1">
<li>Get Audible and Spotify subscriptions. It has books that aren’t available on Libby (which I also use).</li>
<li>Stock up on free books using Libby. Hold times vary, but can be a few weeks or months for popular titles. Note: you can supply multiple library accounts.</li>
<li>For short books not on Libby, check Audible free catalog. If it’s not in the Audible free catalog, check Spotify Premium listening, which is 15 hours per month. If you listen to short books on Spotify, you can get 2-3 books in 15 hours. (It’s 15 book hours, not listening hours.) Also, if your phone is locked, you can go beyond the 15 hours (don’t report this…). But once you re open the app the 15 hour limit will halt you. 2-3 books would otherwise be $20-45 dollars depending on the cost of the audio book. $12 for Spotify premium is a deal.</li>
<li>Use Audible credits for books you can’t find on Libby or Spotify. Remember, Audible is $15 per month. So don’t waste it on a $4 book. Buy the expensive books or &gt;15 hour books with the credits.</li>
<li>With all the cash savings, and if you still have time, now you can buy the remaining books you want on either Audible and Spotify.</li>
</ol>
<p>Most books are on Libby. Domain specific books and cutting edge releases books are on Audible. Lots of great in between books on Spotify Premium.</p>
<p>I don’t know why but after 50 books you get a sense for what books are going to be available where.</p>
<p>Lastly, on Chrome I use the SwiftRead extension for speed reading and on iOS the <a href="https://apps.apple.com/us/app/outread-speed-reading/id778846279">Outread</a> app.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>life hacks</category>
  <guid>https://www.bryanwhiting.com/tech/how-i-learn.html</guid>
  <pubDate>Thu, 14 Mar 2024 16:18:34 GMT</pubDate>
</item>
<item>
  <title>Devin the AI coder</title>
  <link>https://www.bryanwhiting.com/tech/devin-the-ai-coder.html</link>
  <description><![CDATA[ 





<p><a href="https://www.cognition-labs.com/blog">Blog</a></p>
<ul>
<li>Devin is hooked up to a terminal, the internet, and the code base</li>
<li>Can solve some problems and to end</li>
<li>Let’s you help be involved in the process</li>
</ul>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>ai tools</category>
  <guid>https://www.bryanwhiting.com/tech/devin-the-ai-coder.html</guid>
  <pubDate>Wed, 13 Mar 2024 21:15:17 GMT</pubDate>
</item>
<item>
  <title>News Notes for 2024-03-11</title>
  <link>https://www.bryanwhiting.com/news/2024-03-11-news-notes.html</link>
  <description><![CDATA[ 





<p><a href="https://simonwillison.net/2024/Mar/8/gpt-4-barrier/">The GPT-4 barrier has finally been broken</a></p>
<ul>
<li>this doesn’t even mention Llama or apple’s Ferret <a href="https://github.com/apple/ml-ferret">ferret</a></li>
<li><a href="https://generativeai.pub/hushed-arrival-of-apples-open-source-multimodal-llm-called-ferret-a-commitment-to-open-and-239a0285a866">Hushed Arrival of Apple’s Open Source Multimodal LLM called Ferret: A Commitment to Open and Responsible AI or Strategic Power Play? | by Miz Causevic | Generative AI</a></li>
</ul>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>news</category>
  <category>ai</category>
  <guid>https://www.bryanwhiting.com/news/2024-03-11-news-notes.html</guid>
  <pubDate>Mon, 11 Mar 2024 19:30:57 GMT</pubDate>
</item>
<item>
  <title>Setting up a New Mac</title>
  <link>https://www.bryanwhiting.com/tech/setting-up-a-new-mac.html</link>
  <description><![CDATA[ 





<p>Things I like to do:</p>
<p>Terminal: - Home brew - Zsh - Power level 10k - gh cli - Lazygit cli</p>
<p>Mac Applications I download: - alfred: - rectangle: <code>brew install rectangle</code>. Screen location manager - Flycut: <code>brew install flycut</code>. Clipboard manager</p>
<section id="zsh-aliases" class="level2">
<h2 class="anchored" data-anchor-id="zsh-aliases">Zsh aliases:</h2>


</section>

<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <guid>https://www.bryanwhiting.com/tech/setting-up-a-new-mac.html</guid>
  <pubDate>Fri, 08 Mar 2024 12:36:15 GMT</pubDate>
</item>
<item>
  <title>Hendrix, a Machine Learning Platform by Spotify</title>
  <link>https://www.bryanwhiting.com/tech/hendrix-a-machine-learning-platform-by-spotify.html</link>
  <description><![CDATA[ 





<p><a href="https://www.infoq.com/presentations/hendrix-ml/">Introducing the Hendrix ML Platform: an Evolution of Spotify’s ML Infrastructure - InfoQ</a></p>
<ul>
<li>the video in the link above starts at 20m to talk about Hendrix</li>
<li>they use Ray clusters and PyTorch to scale the backend, with Flyte to schedule their jobs</li>
<li>they build to enable notebook iteration and development</li>
<li>They have feature store, standardized model registry</li>
</ul>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/J5YNfsymuFw?si=avzkix6eeEupZHs-" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>ml-tools</category>
  <category>machine learning platforms</category>
  <guid>https://www.bryanwhiting.com/tech/hendrix-a-machine-learning-platform-by-spotify.html</guid>
  <pubDate>Fri, 08 Mar 2024 07:33:35 GMT</pubDate>
</item>
<item>
  <title>Interviewing as an ML engineer</title>
  <link>https://www.bryanwhiting.com/tech/interviewing-as-an-ml-engineer.html</link>
  <description><![CDATA[ 





<p><a href="https://acompa.net/mle-job-hunt-2024.html">On job-hunting in 2024 as a machine learning engineer - On Statistics and Machine Learning</a></p>
<p>This blog offers some really interesting</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>reactions</category>
  <guid>https://www.bryanwhiting.com/tech/interviewing-as-an-ml-engineer.html</guid>
  <pubDate>Fri, 08 Mar 2024 07:30:13 GMT</pubDate>
</item>
<item>
  <title>The Baby</title>
  <link>https://www.bryanwhiting.com/tech/the-baby.html</link>
  <description><![CDATA[ 





<p>Working for a startup is like being a nanny. You can love it all you want, but it’s not yours.</p>
<p>In the words of Michael Jackson:</p>
<blockquote class="blockquote">
<p>Billie Jean is not my lover She’s just a girl who claims that I am the one But the kid is not my son She says I am the one, but the kid is not my son</p>
</blockquote>
<p>Always remember: unless you own it, the kid is not your son.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>startups</category>
  <guid>https://www.bryanwhiting.com/tech/the-baby.html</guid>
  <pubDate>Sun, 03 Mar 2024 21:24:29 GMT</pubDate>
</item>
<item>
  <title>5 Questions You Should Ask Before Adopting AI</title>
  <link>https://www.bryanwhiting.com/tech/5-questions-you-should-ask-before-adopting-ai.html</link>
  <description><![CDATA[ 





<p>I see a lot of executives dive into AI with a fury of excitement - the possibilities are endless. As it results, chatbots offering used cars for $1, refund policies you don’t want to stand behind and having the system generate fake legal briefs (<a href="../tech/three-ai-failures-needing-guardrails.html">Air Canada’s failed AI-generated Refund Policy and other AI mishaps: When you need guardrails on your AI</a>).</p>
<p>I see this with experienced executives saying “I want to just infuse my product with AI.” For example, “I’ve got 100 PDFs and a wealth of knowledge that I want to integrate into my app”.</p>
<p>Imagine you’re an unknown artist. What’s more likely for success: pain something you want, or paint something by commission?</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/dalle-ai-apple-picker.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">How much time will it take to build an AI apple picker vs just hiring someone?</figcaption>
</figure>
</div>
<p>Software fails when software developers build something because it sounds like a good idea. Essentially, they build a solution looking for a problem. Or they believe “if I build this my customers will love it.”</p>
<p>The same goes for AI. We’re at a new wave where anything is possible. Perhaps you’re so entrenched in a problem you intuitively know the solution, build something, and your customers (or coworkers) love what you’ve made.</p>
<p>Far more likely is you end up believing AI isn’t working.</p>
<p>Here are the five questions you should ask before adopting AI:</p>
<ol type="1">
<li>Whats the job my customer will hire my AI to do? (<a href="https://hbr.org/2016/09/know-your-customers-jobs-to-be-done">Know Your Customers’ “Jobs to Be Done”</a>)</li>
<li>Why will they hire my AI?</li>
<li>How much is not having my AI costing them?</li>
<li>If my AI didn’t exists, whats the stupidest way my customers could get an 80% solution?</li>
<li>If my AI does exist in all its glory, why will it fail miserably to do the job its hired to do?</li>
</ol>
<p>Too many dive straight to a solution.</p>
<p>Yes, AI is and will revolutionize jobs. The first ones it’ll revolutionize are the obvious ones: the boring or time intensive tasks that you’re already doing. For Hollywood, AI will replace the laborious task of generating storyboards and such (<a href="../tech/unreal-ai-sora.html">Unreal AI: Meet Sora</a>). They’re not trying to solve world hunger (first) at open AI. They’re trying to replace jons that are already being hired for. They want to replace truck drivers with AI drivers, warriors with AI drones, and creatives (artistic, musical, and software) with AI. They invented a whole new way of doing…the thing that needed to be done anyway.</p>
<p>Don’t solve a problem that nobody cares about. Because at this point in the economy your customer already has Google, competitors they can go to, and half baked solutions they can already muster on their own. What they need from you is a solution to their biggest problem, now.</p>
<p>Maybe AI will solve that. Maybe some basic software will instead. Ask yourself these three questions:</p>
<ol type="1">
<li>Will this save time?</li>
<li>Save energy?</li>
<li>Save money?</li>
</ol>
<p>If not, it’s not worth your time, energy, or money to develop.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <guid>https://www.bryanwhiting.com/tech/5-questions-you-should-ask-before-adopting-ai.html</guid>
  <pubDate>Tue, 20 Feb 2024 09:07:57 GMT</pubDate>
</item>
<item>
  <title>News Notes for 2024-02-18</title>
  <link>https://www.bryanwhiting.com/news/2024-02-18-news-notes.html</link>
  <description><![CDATA[ 





<p><a href="https://open.substack.com/pub/whytryai/p/10x-ai-39-open-ai-sora-google-gemini-1-5?r=2ri91a&amp;utm_medium=ios&amp;utm_campaign=post">10X AI (Issue #39): Open AI’s Sora, Google’s Gemini 1.5, Stable Cascade, and a “Hand Ox?”</a></p>
<ul>
<li>NVIDIA lets you chat with your docs privately using llama</li>
<li>Sora is far better than other video platforms</li>
<li>Google Gemini 1.5 can find content deep within a video pretty incredibly</li>
<li>Stable cascade lets you do text to video</li>
</ul>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>news</category>
  <category>ai tools</category>
  <guid>https://www.bryanwhiting.com/news/2024-02-18-news-notes.html</guid>
  <pubDate>Sun, 18 Feb 2024 21:10:52 GMT</pubDate>
</item>
<item>
  <title>Air Canada’s failed AI-generated Refund Policy and other AI mishaps: When you need guardrails on your AI</title>
  <link>https://www.bryanwhiting.com/tech/three-ai-failures-needing-guardrails.html</link>
  <description><![CDATA[ 





<p>In recent news, <a href="https://arstechnica.com/tech-policy/2024/02/air-canada-must-honor-refund-policy-invented-by-airlines-chatbot/">Air Canada must honor refund policy invented by airline’s chatbot | Ars Technica</a>.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/dalle-guardrails-on-ai.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">We can’t even contain today’s AI. How will we contain tomorrow’s?</figcaption>
</figure>
</div>
<p>Previously, trollers were able to convince the chatbot to agree to selling them a car for $1. <a href="https://the-decoder.com/people-buy-brand-new-chevrolets-for-1-from-a-chatgpt-chatbot/">People buy brand-new Chevrolets for $1 from a ChatGPT chatbot</a>. It’s possible some of these things may have actually been legally binding if someone wanted to sue for it.</p>
<p>And don’t forget the lawywrs being sanctioned for not reviewing their AI: <a href="https://www.reuters.com/legal/new-york-lawyers-sanctioned-using-fake-chatgpt-cases-legal-brief-2023-06-22/">New York lawyers sanctioned for using fake ChatGPT cases in legal brief | Reuters</a>.</p>
<p>Be careful - AI is incredibly hard to control. Open tools exist to attempt impose guardrails, but they’re not perfect: <a href="https://arxiv.org/html/2402.01822v1">Building Guardrails for Large Language Models</a>.</p>
<p>If we can’t contain today’s AI, can we contain tomorrow’s? This isn’t to be an alarmist, but a pragmatist. Machine learning was used in a lot of wrong ways before it was able to be harnessed for good. The same will likely be true for AI.</p>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>ai mishaps</category>
  <category>ai</category>
  <category>ai guardrails</category>
  <guid>https://www.bryanwhiting.com/tech/three-ai-failures-needing-guardrails.html</guid>
  <pubDate>Sun, 18 Feb 2024 09:21:10 GMT</pubDate>
</item>
<item>
  <title>News Notes for 2024-02-17</title>
  <link>https://www.bryanwhiting.com/news/2024-02-17-news-notes.html</link>
  <description><![CDATA[ 





<p><a href="https://aisecret.us/p/sora-became-instantly-famous-soon-will-agi-arrive-sectors-will-collapse">Sora “nuked” the human world overnight!</a></p>
<ul>
<li>AI will empower the few creatives to not need underlings. Same in legal - no need for temps or paralegals. Tech can replace them, empowering the truly competent to get more done faster. This will eliminate jobs near the bottom, not near the top (the ones in control to begin with)</li>
</ul>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>news</category>
  <guid>https://www.bryanwhiting.com/news/2024-02-17-news-notes.html</guid>
  <pubDate>Sat, 17 Feb 2024 10:19:55 GMT</pubDate>
</item>
<item>
  <title>Unreal AI: Meet Sora</title>
  <link>https://www.bryanwhiting.com/tech/unreal-ai-sora.html</link>
  <description><![CDATA[ 





<p>Years ago Deepmind proved they can solve StarCraft: <a href="https://www.youtube.com/live/cUTMhmVh1qs?si=BXO9WJ-2WV1jgf0f">YouTube</a></p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="https://www.youtube.com/live/cUTMhmVh1qs?si=BXO9WJ-2WV1jgf0f"></video></div>
Now OpenAI is probably using reinforcement learning using physics engines. Meet Sora: <a href="https://openai.com/sora">Sora</a>.
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
If you think OpenAI Sora is a creative toy like DALLE, … think again. Sora is a data-driven physics engine. It is a simulation of many worlds, real or fantastical. The simulator learns intricate rendering, "intuitive" physics, long-horizon reasoning, and semantic grounding, all… <a href="https://t.co/pRuiXhUqYR">pic.twitter.com/pRuiXhUqYR</a>
</p>
— Jim Fan (<span class="citation" data-cites="DrJimFan">@DrJimFan</span>) <a href="https://twitter.com/DrJimFan/status/1758210245799920123?ref_src=twsrc%5Etfw">February 15, 2024</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>Think that robots won’t be 100% smarter than us being able to do anything we can think of?</p>
<p>The video games, movies, simulators, etc of next year are gonna be lit.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-unreal-sora.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Unreal sora</figcaption>
</figure>
</div>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>ai</category>
  <guid>https://www.bryanwhiting.com/tech/unreal-ai-sora.html</guid>
  <pubDate>Fri, 16 Feb 2024 17:32:54 GMT</pubDate>
</item>
<item>
  <title>Spellbook AI Reviews</title>
  <link>https://www.bryanwhiting.com/tech/spellbook-ai-reviews-redlining.html</link>
  <description><![CDATA[ 





<p>The AI world heats up with another legal tech offering.</p>
<p><a href="https://www.spellbook.legal/gpt-4-for-lawyers">GPT-4 for Lawyers is now available | Spellbook</a></p>
<ul>
<li>Works in word</li>
<li>Suggests edits (redlines) automatically to achieve your goals</li>
</ul>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-spellbook-landing.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Spellbook</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://www.bryanwhiting.com/img/screenshot-spellbook-example.jpeg" class="preview-image img-fluid figure-img"></p>
<figcaption class="margin-caption">Auto-review</figcaption>
</figure>
</div>



<p>_________________________ <br> <br> <i><a href="https://www.bryanwhiting.com/about">Bryan</a> lives somewhere at the intersection of faith, fatherhood, and futurism and writes about <a href="https://www.bryanwhiting.com/tech">tech</a>, <a href="https://www.bryanwhiting.com/books">books</a>, <a href="https://www.bryanwhiting.com/christianity">Christianity</a>, <a href="https://www.bryanwhiting.com/gratitude">gratitude</a>, and <a href="https://www.bryanwhiting.com/">whatever’s on his mind</a>. If you liked reading, perhaps you’ll also like subscribing: <br><br> </i><iframe src="https://embeds.beehiiv.com/106e21ff-1989-43d2-9bd7-d4a4c4404ab6?slim=true" data-test-id="beehiiv-embed" height="52" frameborder="0" scrolling="no" style="margin: 0; border-radius: 0px !important; background-color: transparent;"></iframe></p> ]]></description>
  <category>tech</category>
  <category>legal-ai</category>
  <category>ai tools</category>
  <guid>https://www.bryanwhiting.com/tech/spellbook-ai-reviews-redlining.html</guid>
  <pubDate>Fri, 16 Feb 2024 11:51:02 GMT</pubDate>
</item>
</channel>
</rss>
